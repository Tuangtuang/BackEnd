<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.RecommendationCommunicationMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.entity.RecommendationCommunication" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="tbl_recommendation_id" property="tblRecommendationId" jdbcType="INTEGER" />
    <result column="version_id" property="versionId" jdbcType="INTEGER" />
    <result column="people_id" property="peopleId" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.demo.model.entity.RecommendationCommunication" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, tbl_recommendation_id, version_id, people_id, time
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.example.demo.model.entity.RecommendationCommunicationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_recommendation_communication
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.model.entity.RecommendationCommunicationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tbl_recommendation_communication
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_recommendation_communication
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tbl_recommendation_communication
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.entity.RecommendationCommunicationExample" >
    delete from tbl_recommendation_communication
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.entity.RecommendationCommunication" >
    insert into tbl_recommendation_communication (id, tbl_recommendation_id, version_id, 
      people_id, time, content
      )
    values (#{id,jdbcType=INTEGER}, #{tblRecommendationId,jdbcType=INTEGER}, #{versionId,jdbcType=INTEGER}, 
      #{peopleId,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.entity.RecommendationCommunication" >
    insert into tbl_recommendation_communication
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="tblRecommendationId != null" >
        tbl_recommendation_id,
      </if>
      <if test="versionId != null" >
        version_id,
      </if>
      <if test="peopleId != null" >
        people_id,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tblRecommendationId != null" >
        #{tblRecommendationId,jdbcType=INTEGER},
      </if>
      <if test="versionId != null" >
        #{versionId,jdbcType=INTEGER},
      </if>
      <if test="peopleId != null" >
        #{peopleId,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.entity.RecommendationCommunicationExample" resultType="java.lang.Integer" >
    select count(*) from tbl_recommendation_communication
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tbl_recommendation_communication
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tblRecommendationId != null" >
        tbl_recommendation_id = #{record.tblRecommendationId,jdbcType=INTEGER},
      </if>
      <if test="record.versionId != null" >
        version_id = #{record.versionId,jdbcType=INTEGER},
      </if>
      <if test="record.peopleId != null" >
        people_id = #{record.peopleId,jdbcType=INTEGER},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update tbl_recommendation_communication
    set id = #{record.id,jdbcType=INTEGER},
      tbl_recommendation_id = #{record.tblRecommendationId,jdbcType=INTEGER},
      version_id = #{record.versionId,jdbcType=INTEGER},
      people_id = #{record.peopleId,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tbl_recommendation_communication
    set id = #{record.id,jdbcType=INTEGER},
      tbl_recommendation_id = #{record.tblRecommendationId,jdbcType=INTEGER},
      version_id = #{record.versionId,jdbcType=INTEGER},
      people_id = #{record.peopleId,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.entity.RecommendationCommunication" >
    update tbl_recommendation_communication
    <set >
      <if test="tblRecommendationId != null" >
        tbl_recommendation_id = #{tblRecommendationId,jdbcType=INTEGER},
      </if>
      <if test="versionId != null" >
        version_id = #{versionId,jdbcType=INTEGER},
      </if>
      <if test="peopleId != null" >
        people_id = #{peopleId,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.model.entity.RecommendationCommunication" >
    update tbl_recommendation_communication
    set tbl_recommendation_id = #{tblRecommendationId,jdbcType=INTEGER},
      version_id = #{versionId,jdbcType=INTEGER},
      people_id = #{peopleId,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.entity.RecommendationCommunication" >
    update tbl_recommendation_communication
    set tbl_recommendation_id = #{tblRecommendationId,jdbcType=INTEGER},
      version_id = #{versionId,jdbcType=INTEGER},
      people_id = #{peopleId,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getTeacherChatInfo" resultType="com.example.demo.model.databaseResponse.ChatName" parameterType="java.lang.Integer">
    select tbl_recommendation_communication.content as detail,tbl_teacher.name as name,tbl_recommendation_communication.time as postTime,version_id as identityTag
    from tbl_recommendation_communication inner join tbl_teacher on tbl_teacher.id=tbl_recommendation_communication.people_id
    where tbl_recommendation_id=#{0} and version_id=0
  </select>

  <select id="getStudentChatInfo" resultType="com.example.demo.model.databaseResponse.ChatName" parameterType="java.lang.Integer">
    select tbl_recommendation_communication.content as detail,tbl_student.name as name,tbl_recommendation_communication.time as postTime,version_id as identityTag
    from tbl_recommendation_communication inner join tbl_student on tbl_student.id=tbl_recommendation_communication.people_id
    where tbl_recommendation_id=#{0} and version_id=1
  </select>

  <delete id="deleteByStudentId" parameterType="java.lang.Integer">
    delete from tbl_recommendation_communication
    where tbl_recommendation_communication.version_id in (
      select tbl_recommendation.id
      from tbl_recommendation
      where tbl_recommendation.stu_id=#{0}
    )
  </delete>
</mapper>