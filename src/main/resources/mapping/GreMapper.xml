<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.GreMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.entity.Gre" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="stu_id" property="stuId" jdbcType="INTEGER" />
    <result column="overall" property="overall" jdbcType="DOUBLE" />
    <result column="overall_percentile" property="overallPercentile" jdbcType="DOUBLE" />
    <result column="verbal" property="verbal" jdbcType="DOUBLE" />
    <result column="verbal_percentile" property="verbalPercentile" jdbcType="DOUBLE" />
    <result column="quantitative" property="quantitative" jdbcType="DOUBLE" />
    <result column="quantitative_percentile" property="quantitativePercentile" jdbcType="DOUBLE" />
    <result column="writing" property="writing" jdbcType="DOUBLE" />
    <result column="writing_percentile" property="writingPercentile" jdbcType="DOUBLE" />
    <result column="test_date" property="testDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, stu_id, overall, overall_percentile, verbal, verbal_percentile, quantitative, 
    quantitative_percentile, writing, writing_percentile, test_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.model.entity.GreExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tbl_gre
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tbl_gre
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tbl_gre
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.entity.GreExample" >
    delete from tbl_gre
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.entity.Gre" keyProperty="id"
          keyColumn="id" useGeneratedKeys="true">
    insert into tbl_gre (id, stu_id, overall, 
      overall_percentile, verbal, verbal_percentile, 
      quantitative, quantitative_percentile, writing, 
      writing_percentile, test_date)
    values (#{id,jdbcType=INTEGER}, #{stuId,jdbcType=INTEGER}, #{overall,jdbcType=DOUBLE}, 
      #{overallPercentile,jdbcType=DOUBLE}, #{verbal,jdbcType=DOUBLE}, #{verbalPercentile,jdbcType=DOUBLE}, 
      #{quantitative,jdbcType=DOUBLE}, #{quantitativePercentile,jdbcType=DOUBLE}, #{writing,jdbcType=DOUBLE}, 
      #{writingPercentile,jdbcType=DOUBLE}, #{testDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.entity.Gre" >
    insert into tbl_gre
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="stuId != null" >
        stu_id,
      </if>
      <if test="overall != null" >
        overall,
      </if>
      <if test="overallPercentile != null" >
        overall_percentile,
      </if>
      <if test="verbal != null" >
        verbal,
      </if>
      <if test="verbalPercentile != null" >
        verbal_percentile,
      </if>
      <if test="quantitative != null" >
        quantitative,
      </if>
      <if test="quantitativePercentile != null" >
        quantitative_percentile,
      </if>
      <if test="writing != null" >
        writing,
      </if>
      <if test="writingPercentile != null" >
        writing_percentile,
      </if>
      <if test="testDate != null" >
        test_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuId != null" >
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="overall != null" >
        #{overall,jdbcType=DOUBLE},
      </if>
      <if test="overallPercentile != null" >
        #{overallPercentile,jdbcType=DOUBLE},
      </if>
      <if test="verbal != null" >
        #{verbal,jdbcType=DOUBLE},
      </if>
      <if test="verbalPercentile != null" >
        #{verbalPercentile,jdbcType=DOUBLE},
      </if>
      <if test="quantitative != null" >
        #{quantitative,jdbcType=DOUBLE},
      </if>
      <if test="quantitativePercentile != null" >
        #{quantitativePercentile,jdbcType=DOUBLE},
      </if>
      <if test="writing != null" >
        #{writing,jdbcType=DOUBLE},
      </if>
      <if test="writingPercentile != null" >
        #{writingPercentile,jdbcType=DOUBLE},
      </if>
      <if test="testDate != null" >
        #{testDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.entity.GreExample" resultType="java.lang.Integer" >
    select count(*) from tbl_gre
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tbl_gre
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stuId != null" >
        stu_id = #{record.stuId,jdbcType=INTEGER},
      </if>
      <if test="record.overall != null" >
        overall = #{record.overall,jdbcType=DOUBLE},
      </if>
      <if test="record.overallPercentile != null" >
        overall_percentile = #{record.overallPercentile,jdbcType=DOUBLE},
      </if>
      <if test="record.verbal != null" >
        verbal = #{record.verbal,jdbcType=DOUBLE},
      </if>
      <if test="record.verbalPercentile != null" >
        verbal_percentile = #{record.verbalPercentile,jdbcType=DOUBLE},
      </if>
      <if test="record.quantitative != null" >
        quantitative = #{record.quantitative,jdbcType=DOUBLE},
      </if>
      <if test="record.quantitativePercentile != null" >
        quantitative_percentile = #{record.quantitativePercentile,jdbcType=DOUBLE},
      </if>
      <if test="record.writing != null" >
        writing = #{record.writing,jdbcType=DOUBLE},
      </if>
      <if test="record.writingPercentile != null" >
        writing_percentile = #{record.writingPercentile,jdbcType=DOUBLE},
      </if>
      <if test="record.testDate != null" >
        test_date = #{record.testDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tbl_gre
    set id = #{record.id,jdbcType=INTEGER},
      stu_id = #{record.stuId,jdbcType=INTEGER},
      overall = #{record.overall,jdbcType=DOUBLE},
      overall_percentile = #{record.overallPercentile,jdbcType=DOUBLE},
      verbal = #{record.verbal,jdbcType=DOUBLE},
      verbal_percentile = #{record.verbalPercentile,jdbcType=DOUBLE},
      quantitative = #{record.quantitative,jdbcType=DOUBLE},
      quantitative_percentile = #{record.quantitativePercentile,jdbcType=DOUBLE},
      writing = #{record.writing,jdbcType=DOUBLE},
      writing_percentile = #{record.writingPercentile,jdbcType=DOUBLE},
      test_date = #{record.testDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.entity.Gre" >
    update tbl_gre
    <set >
      <if test="stuId != null" >
        stu_id = #{stuId,jdbcType=INTEGER},
      </if>
      <if test="overall != null" >
        overall = #{overall,jdbcType=DOUBLE},
      </if>
      <if test="overallPercentile != null" >
        overall_percentile = #{overallPercentile,jdbcType=DOUBLE},
      </if>
      <if test="verbal != null" >
        verbal = #{verbal,jdbcType=DOUBLE},
      </if>
      <if test="verbalPercentile != null" >
        verbal_percentile = #{verbalPercentile,jdbcType=DOUBLE},
      </if>
      <if test="quantitative != null" >
        quantitative = #{quantitative,jdbcType=DOUBLE},
      </if>
      <if test="quantitativePercentile != null" >
        quantitative_percentile = #{quantitativePercentile,jdbcType=DOUBLE},
      </if>
      <if test="writing != null" >
        writing = #{writing,jdbcType=DOUBLE},
      </if>
      <if test="writingPercentile != null" >
        writing_percentile = #{writingPercentile,jdbcType=DOUBLE},
      </if>
      <if test="testDate != null" >
        test_date = #{testDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.entity.Gre" >
    update tbl_gre
    set stu_id = #{stuId,jdbcType=INTEGER},
      overall = #{overall,jdbcType=DOUBLE},
      overall_percentile = #{overallPercentile,jdbcType=DOUBLE},
      verbal = #{verbal,jdbcType=DOUBLE},
      verbal_percentile = #{verbalPercentile,jdbcType=DOUBLE},
      quantitative = #{quantitative,jdbcType=DOUBLE},
      quantitative_percentile = #{quantitativePercentile,jdbcType=DOUBLE},
      writing = #{writing,jdbcType=DOUBLE},
      writing_percentile = #{writingPercentile,jdbcType=DOUBLE},
      test_date = #{testDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>