<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.OtherInfoMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.entity.OtherInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="passport" property="passport" jdbcType="TIMESTAMP" />
    <result column="passport_state" property="passportState" jdbcType="INTEGER" />
    <result column="vaccine" property="vaccine" jdbcType="TIMESTAMP" />
    <result column="vaccine_state" property="vaccineState" jdbcType="INTEGER" />
    <result column="deposit" property="deposit" jdbcType="TIMESTAMP" />
    <result column="deposit_state" property="depositState" jdbcType="INTEGER" />
    <result column="dormitory" property="dormitory" jdbcType="TIMESTAMP" />
    <result column="dormitory_state" property="dormitoryState" jdbcType="INTEGER" />
    <result column="test" property="test" jdbcType="TIMESTAMP" />
    <result column="test_state" property="testState" jdbcType="INTEGER" />
    <result column="fee" property="fee" jdbcType="TIMESTAMP" />
    <result column="fee_state" property="feeState" jdbcType="INTEGER" />
    <result column="document" property="document" jdbcType="TIMESTAMP" />
    <result column="document_state" property="documentState" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, passport, passport_state, vaccine, vaccine_state, deposit, deposit_state, dormitory, 
    dormitory_state, test, test_state, fee, fee_state, document, document_state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.model.entity.OtherInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tbl_other_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tbl_other_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tbl_other_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.entity.OtherInfoExample" >
    delete from tbl_other_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.entity.OtherInfo" >
    insert into tbl_other_info (id, passport, passport_state, 
      vaccine, vaccine_state, deposit, 
      deposit_state, dormitory, dormitory_state, 
      test, test_state, fee, 
      fee_state, document, document_state
      )
    values (#{id,jdbcType=INTEGER}, #{passport,jdbcType=TIMESTAMP}, #{passportState,jdbcType=INTEGER}, 
      #{vaccine,jdbcType=TIMESTAMP}, #{vaccineState,jdbcType=INTEGER}, #{deposit,jdbcType=TIMESTAMP}, 
      #{depositState,jdbcType=INTEGER}, #{dormitory,jdbcType=TIMESTAMP}, #{dormitoryState,jdbcType=INTEGER}, 
      #{test,jdbcType=TIMESTAMP}, #{testState,jdbcType=INTEGER}, #{fee,jdbcType=TIMESTAMP}, 
      #{feeState,jdbcType=INTEGER}, #{document,jdbcType=TIMESTAMP}, #{documentState,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.entity.OtherInfo" >
    insert into tbl_other_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="passport != null" >
        passport,
      </if>
      <if test="passportState != null" >
        passport_state,
      </if>
      <if test="vaccine != null" >
        vaccine,
      </if>
      <if test="vaccineState != null" >
        vaccine_state,
      </if>
      <if test="deposit != null" >
        deposit,
      </if>
      <if test="depositState != null" >
        deposit_state,
      </if>
      <if test="dormitory != null" >
        dormitory,
      </if>
      <if test="dormitoryState != null" >
        dormitory_state,
      </if>
      <if test="test != null" >
        test,
      </if>
      <if test="testState != null" >
        test_state,
      </if>
      <if test="fee != null" >
        fee,
      </if>
      <if test="feeState != null" >
        fee_state,
      </if>
      <if test="document != null" >
        document,
      </if>
      <if test="documentState != null" >
        document_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="passport != null" >
        #{passport,jdbcType=TIMESTAMP},
      </if>
      <if test="passportState != null" >
        #{passportState,jdbcType=INTEGER},
      </if>
      <if test="vaccine != null" >
        #{vaccine,jdbcType=TIMESTAMP},
      </if>
      <if test="vaccineState != null" >
        #{vaccineState,jdbcType=INTEGER},
      </if>
      <if test="deposit != null" >
        #{deposit,jdbcType=TIMESTAMP},
      </if>
      <if test="depositState != null" >
        #{depositState,jdbcType=INTEGER},
      </if>
      <if test="dormitory != null" >
        #{dormitory,jdbcType=TIMESTAMP},
      </if>
      <if test="dormitoryState != null" >
        #{dormitoryState,jdbcType=INTEGER},
      </if>
      <if test="test != null" >
        #{test,jdbcType=TIMESTAMP},
      </if>
      <if test="testState != null" >
        #{testState,jdbcType=INTEGER},
      </if>
      <if test="fee != null" >
        #{fee,jdbcType=TIMESTAMP},
      </if>
      <if test="feeState != null" >
        #{feeState,jdbcType=INTEGER},
      </if>
      <if test="document != null" >
        #{document,jdbcType=TIMESTAMP},
      </if>
      <if test="documentState != null" >
        #{documentState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.entity.OtherInfoExample" resultType="java.lang.Integer" >
    select count(*) from tbl_other_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tbl_other_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.passport != null" >
        passport = #{record.passport,jdbcType=TIMESTAMP},
      </if>
      <if test="record.passportState != null" >
        passport_state = #{record.passportState,jdbcType=INTEGER},
      </if>
      <if test="record.vaccine != null" >
        vaccine = #{record.vaccine,jdbcType=TIMESTAMP},
      </if>
      <if test="record.vaccineState != null" >
        vaccine_state = #{record.vaccineState,jdbcType=INTEGER},
      </if>
      <if test="record.deposit != null" >
        deposit = #{record.deposit,jdbcType=TIMESTAMP},
      </if>
      <if test="record.depositState != null" >
        deposit_state = #{record.depositState,jdbcType=INTEGER},
      </if>
      <if test="record.dormitory != null" >
        dormitory = #{record.dormitory,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dormitoryState != null" >
        dormitory_state = #{record.dormitoryState,jdbcType=INTEGER},
      </if>
      <if test="record.test != null" >
        test = #{record.test,jdbcType=TIMESTAMP},
      </if>
      <if test="record.testState != null" >
        test_state = #{record.testState,jdbcType=INTEGER},
      </if>
      <if test="record.fee != null" >
        fee = #{record.fee,jdbcType=TIMESTAMP},
      </if>
      <if test="record.feeState != null" >
        fee_state = #{record.feeState,jdbcType=INTEGER},
      </if>
      <if test="record.document != null" >
        document = #{record.document,jdbcType=TIMESTAMP},
      </if>
      <if test="record.documentState != null" >
        document_state = #{record.documentState,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tbl_other_info
    set id = #{record.id,jdbcType=INTEGER},
      passport = #{record.passport,jdbcType=TIMESTAMP},
      passport_state = #{record.passportState,jdbcType=INTEGER},
      vaccine = #{record.vaccine,jdbcType=TIMESTAMP},
      vaccine_state = #{record.vaccineState,jdbcType=INTEGER},
      deposit = #{record.deposit,jdbcType=TIMESTAMP},
      deposit_state = #{record.depositState,jdbcType=INTEGER},
      dormitory = #{record.dormitory,jdbcType=TIMESTAMP},
      dormitory_state = #{record.dormitoryState,jdbcType=INTEGER},
      test = #{record.test,jdbcType=TIMESTAMP},
      test_state = #{record.testState,jdbcType=INTEGER},
      fee = #{record.fee,jdbcType=TIMESTAMP},
      fee_state = #{record.feeState,jdbcType=INTEGER},
      document = #{record.document,jdbcType=TIMESTAMP},
      document_state = #{record.documentState,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.entity.OtherInfo" >
    update tbl_other_info
    <set >
      <if test="passport != null" >
        passport = #{passport,jdbcType=TIMESTAMP},
      </if>
      <if test="passportState != null" >
        passport_state = #{passportState,jdbcType=INTEGER},
      </if>
      <if test="vaccine != null" >
        vaccine = #{vaccine,jdbcType=TIMESTAMP},
      </if>
      <if test="vaccineState != null" >
        vaccine_state = #{vaccineState,jdbcType=INTEGER},
      </if>
      <if test="deposit != null" >
        deposit = #{deposit,jdbcType=TIMESTAMP},
      </if>
      <if test="depositState != null" >
        deposit_state = #{depositState,jdbcType=INTEGER},
      </if>
      <if test="dormitory != null" >
        dormitory = #{dormitory,jdbcType=TIMESTAMP},
      </if>
      <if test="dormitoryState != null" >
        dormitory_state = #{dormitoryState,jdbcType=INTEGER},
      </if>
      <if test="test != null" >
        test = #{test,jdbcType=TIMESTAMP},
      </if>
      <if test="testState != null" >
        test_state = #{testState,jdbcType=INTEGER},
      </if>
      <if test="fee != null" >
        fee = #{fee,jdbcType=TIMESTAMP},
      </if>
      <if test="feeState != null" >
        fee_state = #{feeState,jdbcType=INTEGER},
      </if>
      <if test="document != null" >
        document = #{document,jdbcType=TIMESTAMP},
      </if>
      <if test="documentState != null" >
        document_state = #{documentState,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.entity.OtherInfo" >
    update tbl_other_info
    set passport = #{passport,jdbcType=TIMESTAMP},
      passport_state = #{passportState,jdbcType=INTEGER},
      vaccine = #{vaccine,jdbcType=TIMESTAMP},
      vaccine_state = #{vaccineState,jdbcType=INTEGER},
      deposit = #{deposit,jdbcType=TIMESTAMP},
      deposit_state = #{depositState,jdbcType=INTEGER},
      dormitory = #{dormitory,jdbcType=TIMESTAMP},
      dormitory_state = #{dormitoryState,jdbcType=INTEGER},
      test = #{test,jdbcType=TIMESTAMP},
      test_state = #{testState,jdbcType=INTEGER},
      fee = #{fee,jdbcType=TIMESTAMP},
      fee_state = #{feeState,jdbcType=INTEGER},
      document = #{document,jdbcType=TIMESTAMP},
      document_state = #{documentState,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>